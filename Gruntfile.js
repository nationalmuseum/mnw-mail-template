module.exports = function (grunt) {
    grunt.initConfig({
        /**
         * Prepare banner.
         * This will be used as header for generated files.
         */
        pkg: grunt.file.readJSON('package.json'),
        banner: '/*! <%= pkg.name %> - v<%= pkg.version %> ' + '<%= grunt.template.today("yyyy-mm-dd h:MM:ss") %>' + '*/' + "\n",

        config: grunt.file.readJSON('config.json'),

        /* Minify html */
        minifyHtml: {
            options: {
                cdata: true,
                conditionals: true
            },
            dist: {
                files: {
                    'pub/mail.html': 'pub/mail.html'
                }
            }
        },

        /* Include css file inside html */
        inline: {
            dist: {
                src: 'src/compiled.html',
                dest: 'pub/mail.html'
            }
        },

        /* Sass */
        sass: {
            dist: {
                options: {
                    style: 'compressed',
                    sourcemap: 'none'
                },
                files: [{
                    expand: true,
                    cwd: 'src/scss',
                    src: ['**/*.scss'],
                    dest: 'src/css',
                    ext: '.css'
                }]
            }
        },

        /* Enable template inclusion */
        includes: {
            files: {
                src: ['src/mail.html'],
                dest: 'src/compiled.html',
                flatten: true,
                cwd: '.',
                options: {
                    silent: true
                }
            }
        },

        /* Replace template vars */
        replace: {
            dist: {
                options: {
                    patterns: [
                        {
                            match: '{imgUrl}',
                            replacement: '<%= config.imgUrl %>'
                        }
                    ]
                },
                files: [
                    { expand: true, flatten: true, src: ['src/compiled.html'], dest: 'src/' }
                ]
            },
            preview: {
                options: {
                    patterns: [
                        {
                            match: '{imgUrl}',
                            replacement: "assets/"
                        }
                    ]
                },
                files: [
                    { expand: true, flatten: true, src: ['src/compiled.html'], dest: 'src/' }
                ]
            }
        },

        copy: {
            main: {
                files: [
                    // includes files within path and its sub-directories
                    { expand: true, cwd: 'src/', src: ['assets/**'], dest: 'pub/' }
                ],
            },
        },
    });

    grunt.loadNpmTasks('grunt-minify-html');
    grunt.loadNpmTasks('grunt-inline');
    grunt.loadNpmTasks('grunt-contrib-sass');
    grunt.loadNpmTasks('grunt-includes');
    grunt.loadNpmTasks('grunt-replace');
    grunt.loadNpmTasks('grunt-contrib-copy');

    grunt.registerTask('default', ['sass', 'includes', 'replace', 'inline', 'minifyHtml', 'copy']);

    /**
     * Warning! Do not use files generated by a preview task for production purposes.
     */
    grunt.registerTask('preview', ['sass', 'includes', 'replace:preview', 'inline', 'copy']);
};